{"ast":null,"code":"import _slicedToArray from \"/Users/shadow/Desktop/typescript-projects/react/react-recipe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shadow/Desktop/typescript-projects/react/react-recipe/src/App.tsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Recipe from \"./Recipe\";\n\nconst App = () => {\n  const APP_ID = process.env.REACT_APP_API_ID;\n  const APP_KEY = process.env.REACT_APP_KEY;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        search = _useState4[0],\n        setSearch = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1]; // const [query, setQuery] = useState<string>(\"chicken\")\n\n\n  const getData = useCallback(async text => {\n    try {\n      const index = Math.floor(Math.random() * 100);\n      const response = await fetch(`https://api.edamam.com/search?q=${text}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${index}`);\n      const data = await response.json();\n      setRecipes(data.hits);\n    } catch (e) {\n      const response = await fetch(`https://api.edamam.com/search?q=${text}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n      const data = await response.json();\n      setRecipes(data.hits);\n    }\n  }, [APP_ID, APP_KEY]);\n  useEffect(() => {\n    getData(\"chicken\");\n  }, [getData]);\n  const handleChange = useCallback(e => {\n    setSearch(e.target.value);\n  }, []);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    getData(search);\n    setSearch(\"\");\n  }, [getData, search]);\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"search\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search__bar\",\n    value: search,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search__btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"ul\", {\n    className: \"recipe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, recipes.map(({\n    recipe\n  }, i) => React.createElement(Recipe, {\n    key: i,\n    title: recipe.label,\n    calories: recipe.calories,\n    img: recipe.image,\n    ingredients: recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shadow/Desktop/typescript-projects/react/react-recipe/src/App.tsx"],"names":["React","useState","useEffect","useCallback","Recipe","App","APP_ID","process","env","REACT_APP_API_ID","APP_KEY","REACT_APP_KEY","recipes","setRecipes","search","setSearch","loading","setLoading","getData","text","index","Math","floor","random","response","fetch","data","json","hits","e","handleChange","target","value","handleSubmit","preventDefault","map","recipe","i","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\nimport Recipe from \"./Recipe\"\n\ninterface Props {}\n\nconst App: React.FC<Props> = () => {\n    const APP_ID = process.env.REACT_APP_API_ID\n    const APP_KEY = process.env.REACT_APP_KEY\n\n    const [recipes, setRecipes] = useState<[]>([])\n    const [search, setSearch] = useState<string>(\"\")\n    const [loading, setLoading] = useState<boolean>(false)\n    // const [query, setQuery] = useState<string>(\"chicken\")\n\n    const getData: any = useCallback(\n        async (text: string) => {\n            try {\n                const index = Math.floor(Math.random() * 100)\n\n                const response = await fetch(\n                    `https://api.edamam.com/search?q=${text}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${index}`\n                )\n                const data = await response.json()\n                setRecipes(data.hits)\n            } catch (e) {\n                const response = await fetch(\n                    `https://api.edamam.com/search?q=${text}&app_id=${APP_ID}&app_key=${APP_KEY}`\n                )\n                const data = await response.json()\n                setRecipes(data.hits)\n            }\n        },\n        [APP_ID, APP_KEY]\n    )\n\n    useEffect(() => {\n        getData(\"chicken\")\n    }, [getData])\n\n    const handleChange = useCallback(e => {\n        setSearch(e.target.value)\n    }, [])\n\n    const handleSubmit = useCallback(\n        e => {\n            e.preventDefault()\n            getData(search)\n            setSearch(\"\")\n        },\n        [getData, search]\n    )\n\n    return (\n        <>\n            <form className='search' onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    className='search__bar'\n                    value={search}\n                    onChange={handleChange}\n                />\n                <button type='submit' className='search__btn'>\n                    Search\n                </button>\n            </form>\n            <ul className='recipe'>\n                {recipes.map(({ recipe }: any, i: number) => (\n                    <Recipe\n                        key={i}\n                        title={recipe.label}\n                        calories={recipe.calories}\n                        img={recipe.image}\n                        ingredients={recipe.ingredients}\n                    />\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}